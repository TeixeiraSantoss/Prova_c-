{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CadastrarTarefaComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", c_r1.CategoriaId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", c_r1.Nome, \" \");\n  }\n}\nclass CadastrarTarefaComponent {\n  constructor(client, router) {\n    this.client = client;\n    this.router = router;\n    //crio as variaveis que vão ser enviadas para a API\n    this.Titulo = \"\";\n    this.Descricao = \"\";\n    this.Status = \"\";\n    this.CategoriaId = 0;\n    this.categorias = [];\n  }\n  //Requisição que recebe uma lista de \"Genero\" da \"API\", e recebe essa lista em memoria no front\n  ngOnInit() {\n    this.client.get(\"https://localhost:7015/api/categoria/listar\").subscribe({\n      //caso a requisição funcione, vai execultar esse código\n      //basicamente, esse trecho está recebendo uma lista de \"generos\" da \"API\", e está recebendo para o array \"generos\" declrado junto aos atributos\n      next: categorias => {\n        console.table(categorias);\n        this.categorias = categorias;\n      },\n      //caso a requisição falhe\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  //Função \"Cadastrar\"\n  //Para fazer o cadastrar, eu passo um objeto do tipo \"Filme\", com os dados necessarios\n  cadastrar() {\n    let tarefa = {\n      Titulo: this.Titulo,\n      Descricao: this.Descricao,\n      Status: this.Status,\n      CategoriaId: this.CategoriaId\n    };\n    //Fazendo a requisição de cadastro para a \"API\"\n    this.client.post(\"https://localhost:7015/api/tarefa/cadastrar\", tarefa).subscribe({\n      //Requisição deu certo\n      next: tarefa => {\n        console.log(\"cadastrado com sucesso\");\n        this.router.navigate(['pages/tarefa/listar']);\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function CadastrarTarefaComponent_Factory(t) {\n    return new (t || CadastrarTarefaComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastrarTarefaComponent,\n    selectors: [[\"app-cadastrar-tarefa\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"value\"]],\n    template: function CadastrarTarefaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Cadastrar Filme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\");\n        i0.ɵɵtext(4, \"Titulo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarTarefaComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.Titulo = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\");\n        i0.ɵɵtext(8, \"Descri\\u00E7\\u00E3o:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarTarefaComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.Descricao = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\");\n        i0.ɵɵtext(12, \"Categorias:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"select\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarTarefaComponent_Template_select_ngModelChange_13_listener($event) {\n          return ctx.CategoriaId = $event;\n        });\n        i0.ɵɵtemplate(14, CadastrarTarefaComponent_option_14_Template, 2, 2, \"option\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\")(16, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function CadastrarTarefaComponent_Template_button_click_16_listener() {\n          return ctx.cadastrar();\n        });\n        i0.ɵɵtext(17, \"Cadastrar Tarefa\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.Titulo);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.Descricao);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.CategoriaId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categorias);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { CadastrarTarefaComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵpropertyInterpolate","c_r1","CategoriaId","ɵɵadvance","ɵɵtextInterpolate1","Nome","CadastrarTarefaComponent","constructor","client","router","Titulo","Descricao","Status","categorias","ngOnInit","get","subscribe","next","console","table","error","erro","log","cadastrar","tarefa","post","navigate","_","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","CadastrarTarefaComponent_Template","rf","ctx","ɵɵlistener","CadastrarTarefaComponent_Template_input_ngModelChange_5_listener","$event","CadastrarTarefaComponent_Template_input_ngModelChange_9_listener","CadastrarTarefaComponent_Template_select_ngModelChange_13_listener","ɵɵtemplate","CadastrarTarefaComponent_option_14_Template","CadastrarTarefaComponent_Template_button_click_16_listener","ɵɵproperty"],"sources":["C:\\Users\\Aluno\\Downloads\\Prova\\FRONT\\src\\app\\pages\\tarefa\\cadastrar-tarefa\\cadastrar-tarefa.component.ts","C:\\Users\\Aluno\\Downloads\\Prova\\FRONT\\src\\app\\pages\\tarefa\\cadastrar-tarefa\\cadastrar-tarefa.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Categoria } from 'src/app/models/categoria';\nimport { Tarefa } from 'src/app/models/tarefa';\n\n@Component({\n  selector: 'app-cadastrar-tarefa',\n  templateUrl: './cadastrar-tarefa.component.html',\n  styleUrls: ['./cadastrar-tarefa.component.css']\n})\nexport class CadastrarTarefaComponent {\n  //crio as variaveis que vão ser enviadas para a API\n    Titulo : string = \"\";\n    Descricao : string = \"\";\n    Status : string = \"\";\n    CategoriaId : number = 0;\n    categorias : Categoria[] = [];\n\n  constructor(private client: HttpClient,\n    private router: Router){}\n\n  //Requisição que recebe uma lista de \"Genero\" da \"API\", e recebe essa lista em memoria no front\n  ngOnInit(): void{\n    this.client.get<Categoria[]>\n      (\"https://localhost:7015/api/categoria/listar\")\n      .subscribe({\n        //caso a requisição funcione, vai execultar esse código\n        \n        //basicamente, esse trecho está recebendo uma lista de \"generos\" da \"API\", e está recebendo para o array \"generos\" declrado junto aos atributos\n        next: (categorias) => {\n          console.table(categorias);\n          this.categorias = categorias;\n        },\n\n        //caso a requisição falhe\n        error : (erro) => {\n          console.log(erro)\n        }\n      })\n  }\n\n  //Função \"Cadastrar\"\n  //Para fazer o cadastrar, eu passo um objeto do tipo \"Filme\", com os dados necessarios\n  cadastrar(): void{\n    let tarefa: Tarefa ={\n      Titulo: this.Titulo,\n      Descricao: this.Descricao,\n      Status: this.Status,\n      CategoriaId: this.CategoriaId\n    }; \n\n    //Fazendo a requisição de cadastro para a \"API\"\n    this.client.post<Tarefa>\n      //para fazer uma requisição \"POST\", são necessarias 2 coisas\n      //1 - A rota da requisição que está na \"API\"\n      //2 - Passar um objeto para ir junto com a requisição\n      (\"https://localhost:7015/api/tarefa/cadastrar\", tarefa)\n      .subscribe({\n        //Requisição deu certo\n        next: (tarefa) => {\n          console.log(\"cadastrado com sucesso\")\n          this.router.navigate(['pages/tarefa/listar'])\n        },\n        error: (erro) =>{\n          console.log(erro);\n        }\n      })\n  };\n}\n","<h1>Cadastrar Filme</h1>\n\n<div>\n  <label>Titulo:</label>\n  <input type=\"text\" [(ngModel)]=\"Titulo\" />\n</div>\n\n<div>\n  <label>Descrição:</label>\n  <input type=\"text\" [(ngModel)]=\"Descricao\" />\n</div>\n\n<!-- <div>\n  <label>Genero:</label>\n  <input type=\"text\" [(ngModel)]=\"generoID\" />\n</div> -->\n\n<div>\n  <label>Categorias:</label>\n  <select [(ngModel)]=\"CategoriaId\">\n    <option *ngFor=\"let c of categorias\" value=\"{{ c.CategoriaId }}\">\n      {{ c.Nome }}\n    </option>\n  </select>\n</div>\n\n<div>\n  <button (click)=\"cadastrar()\">Cadastrar Tarefa</button>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}