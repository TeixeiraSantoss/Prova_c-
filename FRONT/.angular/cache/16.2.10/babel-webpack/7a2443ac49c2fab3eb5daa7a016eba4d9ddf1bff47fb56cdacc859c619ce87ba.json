{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nclass CadastrarTarefaComponent {\n  constructor(client, router) {\n    this.client = client;\n    this.router = router;\n    //crio as variaveis que vão ser enviadas para a API\n    this.Titulo = \"\";\n    this.Descricao = \"\";\n    this.Status = \"\";\n    this.CategoriaId = 0;\n    this.categorias = [];\n  }\n  //Requisição que recebe uma lista de \"Genero\" da \"API\", e recebe essa lista em memoria no front\n  ngOnInit() {\n    this.client.get(\"https://localhost:7015/api/categoria/listar\").subscribe({\n      //caso a requisição funcione, vai execultar esse código\n      //basicamente, esse trecho está recebendo uma lista de \"generos\" da \"API\", e está recebendo para o array \"generos\" declrado junto aos atributos\n      next: categorias => {\n        console.table(categorias);\n        this.categorias = categorias;\n      },\n      //caso a requisição falhe\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  //Função \"Cadastrar\"\n  //Para fazer o cadastrar, eu passo um objeto do tipo \"Filme\", com os dados necessarios\n  cadastrar() {\n    let tarefa = {\n      Titulo: this.Titulo,\n      Descricao: this.Descricao,\n      Status: this.Status,\n      CategoriaId: this.CategoriaId\n    };\n    //Fazendo a requisição de cadastro para a \"API\"\n    this.client.post(\"https://localhost:7015/api/filme/cadastrar\", tarefa).subscribe({\n      //Requisição deu certo\n      next: tarefa => {\n        console.log(\"cadastrado com sucesso\");\n        this.router.navigate(['pages/tarefa/listar']);\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function CadastrarTarefaComponent_Factory(t) {\n    return new (t || CadastrarTarefaComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastrarTarefaComponent,\n    selectors: [[\"app-cadastrar-tarefa\"]],\n    decls: 17,\n    vars: 3,\n    consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function CadastrarTarefaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Cadastrar Filme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\");\n        i0.ɵɵtext(4, \"Titulo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarTarefaComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.Titulo = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\");\n        i0.ɵɵtext(8, \"Descri\\u00E7\\u00E3o:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarTarefaComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.Descricao = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\");\n        i0.ɵɵtext(12, \"Categorias:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarTarefaComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.CategoriaId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\")(15, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CadastrarTarefaComponent_Template_button_click_15_listener() {\n          return ctx.cadastrar();\n        });\n        i0.ɵɵtext(16, \"Cadastrar Tarefa\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.Titulo);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.Descricao);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.CategoriaId);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { CadastrarTarefaComponent };","map":{"version":3,"names":["CadastrarTarefaComponent","constructor","client","router","Titulo","Descricao","Status","CategoriaId","categorias","ngOnInit","get","subscribe","next","console","table","error","erro","log","cadastrar","tarefa","post","navigate","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","CadastrarTarefaComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CadastrarTarefaComponent_Template_input_ngModelChange_5_listener","$event","CadastrarTarefaComponent_Template_input_ngModelChange_9_listener","CadastrarTarefaComponent_Template_input_ngModelChange_13_listener","CadastrarTarefaComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Aluno\\Downloads\\Prova\\FRONT\\src\\app\\pages\\tarefa\\cadastrar-tarefa\\cadastrar-tarefa.component.ts","C:\\Users\\Aluno\\Downloads\\Prova\\FRONT\\src\\app\\pages\\tarefa\\cadastrar-tarefa\\cadastrar-tarefa.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Categoria } from 'src/app/models/categoria';\nimport { Tarefa } from 'src/app/models/tarefa';\n\n@Component({\n  selector: 'app-cadastrar-tarefa',\n  templateUrl: './cadastrar-tarefa.component.html',\n  styleUrls: ['./cadastrar-tarefa.component.css']\n})\nexport class CadastrarTarefaComponent {\n  //crio as variaveis que vão ser enviadas para a API\n    Titulo : string = \"\";\n    Descricao : string = \"\";\n    Status : string = \"\";\n    CategoriaId : number = 0;\n    categorias : Categoria[] = [];\n\n  constructor(private client: HttpClient,\n    private router: Router){}\n\n  //Requisição que recebe uma lista de \"Genero\" da \"API\", e recebe essa lista em memoria no front\n  ngOnInit(): void{\n    this.client.get<Categoria[]>\n      (\"https://localhost:7015/api/categoria/listar\")\n      .subscribe({\n        //caso a requisição funcione, vai execultar esse código\n        \n        //basicamente, esse trecho está recebendo uma lista de \"generos\" da \"API\", e está recebendo para o array \"generos\" declrado junto aos atributos\n        next: (categorias) => {\n          console.table(categorias);\n          this.categorias = categorias;\n        },\n\n        //caso a requisição falhe\n        error : (erro) => {\n          console.log(erro)\n        }\n      })\n  }\n\n  //Função \"Cadastrar\"\n  //Para fazer o cadastrar, eu passo um objeto do tipo \"Filme\", com os dados necessarios\n  cadastrar(): void{\n    let tarefa: Tarefa ={\n      Titulo: this.Titulo,\n      Descricao: this.Descricao,\n      Status: this.Status,\n      CategoriaId: this.CategoriaId\n    }; \n\n    //Fazendo a requisição de cadastro para a \"API\"\n    this.client.post<Tarefa>\n      //para fazer uma requisição \"POST\", são necessarias 2 coisas\n      //1 - A rota da requisição que está na \"API\"\n      //2 - Passar um objeto para ir junto com a requisição\n      (\"https://localhost:7015/api/filme/cadastrar\", tarefa)\n      .subscribe({\n        //Requisição deu certo\n        next: (tarefa) => {\n          console.log(\"cadastrado com sucesso\")\n          this.router.navigate(['pages/tarefa/listar'])\n        },\n        error: (erro) =>{\n          console.log(erro);\n        }\n      })\n  };\n}\n","<h1>Cadastrar Filme</h1>\n\n<div>\n  <label>Titulo:</label>\n  <input type=\"text\" [(ngModel)]=\"Titulo\" />\n</div>\n\n<div>\n  <label>Descrição:</label>\n  <input type=\"text\" [(ngModel)]=\"Descricao\" />\n</div>\n\n<!-- <div>\n  <label>Genero:</label>\n  <input type=\"text\" [(ngModel)]=\"generoID\" />\n</div> -->\n\n<div>\n  <label>Categorias:</label>\n  <input type=\"text\" [(ngModel)]=\"CategoriaId\" />\n</div>\n\n<div>\n  <button (click)=\"cadastrar()\">Cadastrar Tarefa</button>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}